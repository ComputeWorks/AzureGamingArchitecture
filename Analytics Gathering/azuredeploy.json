{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Password": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "This deployment uses the same password for all deployed services and users. The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "ServicesPrefix": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Prefix to be used in front of every deployed services' name. Can only contain lowercase characters but can be empty."
      }
    }
  },

  "variables": {
    "Prefix": "[toLower(parameters('ServicesPrefix'))]",
    "HDInsight": {
      "Name": "[take( concat(variables('Prefix'),'hdizzz', uniqueString(resourceGroup().id)) , 23)]",
      "ClusterLoginUsername": "admin",
      "SSHUsername": "sshuser",
      "Password": "[parameters('Password')]",
      "WorkerNodeSize": "Standard_D3_v2",
      "HeadNodeSize": "Standard_D3_v2",
      "ZookeeperNodeSize": "Small",
      "ClusterType": "hadoop",
      "ClusterVersion": "3.5",
      "Container": "data"
    },

    "DefaultStorageAccount": {
      "Name": "[take( concat(variables('Prefix'),'defzzz', uniqueString(resourceGroup().id)) , 23)]",
      "Type": "Standard_LRS"
    },

    "AnalyticsStorageAccount": {
      "Name": "[take( concat(variables('Prefix'),'anazzz', uniqueString(resourceGroup().id)) , 23)]",
      "Type": "Standard_LRS"
    },

    "SQLDatabase": {
      "ServerName": "[take( concat(variables('Prefix'),'sqlzzz', uniqueString(resourceGroup().id)) , 23)]",
      "Username": "sqluser",
      "Password": "[parameters('Password')]",
      "DatabaseName": "[take( concat(variables('Prefix'),'sqldbgameanalytics') , 23)]"
    },

    "EventHub": {
      "NamespaceName": "[take( concat(variables('Prefix'),'ehzzz', uniqueString(resourceGroup().id)) , 23)]",
      "EventHubName": "ingest",
      "ConsumerGroupName": "streamanalyticsconsumergroup"
    },

    "StreamAnalytics": {
      "JobName": "[take( concat(variables('Prefix'),'sazzz', uniqueString(resourceGroup().id)) , 23)]"
    },

    "PowerBI": {
      "Name": "[take( concat(variables('Prefix'),'pbizzz', uniqueString(resourceGroup().id)) , 23)]"
    }

  },

  "resources": [
    {
      "tags": {
        "displayName": "Default Storage Account"
      },
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-01-01",
      "name": "[variables('defaultStorageAccount').Name]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('DefaultStorageAccount').Type]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "tags": {
        "displayName": "Analytics Storage Account"
      },
      "name": "[variables('AnalyticsStorageAccount').Name]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('analyticsStorageAccount').Type]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "tags": {
        "displayName": "HDInsight Cluster"
      },
      "name": "[variables('HDInsight').Name]",
      "type": "Microsoft.HDInsight/clusters",
      "apiVersion": "2015-03-01-preview",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/',variables('defaultStorageAccount').Name)]"
      ],
      "properties": {
        "clusterVersion": "[variables('HDInsight').ClusterVersion]",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "[variables('HDInsight').ClusterType]",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[variables('HDInsight').ClusterLoginUsername]",
              "restAuthCredential.password": "[parameters('Password')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[replace(replace(reference(resourceId('Microsoft.Storage/storageAccounts', variables('defaultStorageAccount').Name), '2016-01-01').primaryEndpoints.blob,'https://',''),'/','')]",
              "isDefault": true,
              "container": "[variables('HDInsight').Container]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('defaultStorageAccount').Name), '2016-01-01').keys[0].value]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": "2",
              "hardwareProfile": {
                "vmSize": "[variables('HDInsight').HeadNodeSize]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[variables('HDInsight').SSHUsername]",
                  "password": "[parameters('Password')]"
                }
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": 2,
              "hardwareProfile": {
                "vmSize": "[variables('HDInsight').WorkerNodeSize]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[variables('HDInsight').SSHUsername]",
                  "password": "[parameters('Password')]"
                }
              }
            },
            {
              "name": "zookeepernode",
              "targetInstanceCount": "3",
              "hardwareProfile": {
                "vmSize": "[variables('HDInsight').ZookeeperNodeSize]"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[variables('HDInsight').SSHUsername]",
                  "password": "[parameters('Password')]"
                }
              }
            }
          ]
        }
      }
    },
    {
      "tags": {
        "displayName": "SQL Database Server"
      },
      "name": "[variables('SQLDatabase').ServerName]",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2014-04-01",
      "location": "[resourceGroup().location]",
      "kind": "v12.0",
      "dependsOn": [],
      "properties": {
        "administratorLogin": "[variables('SQLDatabase').Username]",
        "administratorLoginPassword": "[variables('SQLDatabase').Password]",
        "version": "12.0"
      },
      "resources": [
        {
          "tags": {
            "displayName": "Database"
          },
          "name": "[variables('SQLDatabase').DatabaseName]",
          "type": "databases",
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('SQLDatabase').ServerName)]"
          ],
          "properties": {
            "edition": "Standard"
          }
        },
        {
          "name": "AllowAllAzureIPs",
          "type": "firewallrules",
          "apiVersion": "2014-04-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Sql/servers/', variables('SQLDatabase').ServerName)]"
          ],
          "properties": {
            "startIpAddress": "0.0.0.0",
            "endIpAddress": "0.0.0.0"
          }
        }
      ]
    },
    {
      "tags": {
        "displayName": "EventHub Namespace"
      },
      "name": "[variables('EventHub').NamespaceName]",
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2015-08-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {},
      "resources": [
        {
          "tags": {
            "displayName": "EventHub"
          },
          "name": "[variables('EventHub').EventHubName]",
          "type": "eventhubs",
          "apiVersion": "2015-08-01",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('EventHub').NamespaceName)]"
          ],
          "properties": {
            "path": "[variables('EventHub').EventHubName]"
          },
          "resources": [
            {
              "tags": {
                "displayName": "Consumer Group"
              },
              "name": "[variables('EventHub').ConsumerGroupName]",
              "type": "consumergroups",
              "apiVersion": "2015-08-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [
                "[variables('EventHub').EventHubName]"
              ],
              "properties": {}
            }
          ]
        }
      ]
    },
    {
      "tags": {
        "displayName": "Stream Analytics Job"
      },
      "name": "[variables('StreamAnalytics').JobName]",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputErrorPolicy": "stop",
        "eventsOutOfOrderPolicy": "adjust",
        "eventsOutOfOrderMaxDelayInSeconds": 0,
        "eventsLateArrivalMaxDelayInSeconds": 5,
        "dataLocale": "en-US",
        "inputs": [],
        "transformation": {
          "name": "SampleProcess",
          "properties": {
            "streamingUnits": 1,
            "query": "SELECT * INTO [YourOutputAlias] FROM [YourInputAlias]"
          }
        }
      }
    },
    {
      "tags": {
        "displayName": "Power BI Embeded"
      },
      "apiVersion": "2016-01-29",
      "name": "[variables('PowerBI').Name]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "tier": "Standard"
      },
      "type": "Microsoft.PowerBI/workspaceCollections"
    }
  ]
}
